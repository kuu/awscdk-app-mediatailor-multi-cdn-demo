// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "AdDecisionServerVASTEndpoint09FC0834": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "AdDecisionServerVASTEndpoint304968C7",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "AdDecisionServerVASTEndpointDeploymentStageprod0E51DA90",
            },
            "/",
          ],
        ],
      },
    },
    "CloudFrontDomainName1": {
      "Description": "CloudFront domain name - 1",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "CloudFrontDomainName-1",
            ],
          ],
        },
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CDN1Distribution0E61DF5B",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "CloudFrontDomainName2": {
      "Description": "CloudFront domain name - 2",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "CloudFrontDomainName-2",
            ],
          ],
        },
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CDN2Distribution1B3C1BBE",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "MediaTailorSessionInitializationURLHLS": {
      "Description": "MediaTailor Session Initialization URL - HLS",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "MediaTailorSessionInitializationURL-HLS",
            ],
          ],
        },
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "curl -X POST -H "Content-Type: application/json" -d '{ "playerParams": {"cdn": "primary"}}' ",
            {
              "Fn::GetAtt": [
                "MediaTailorWithCloudFrontMediaTailorCfnPlaybackConfiguration77F4E5D7",
                "SessionInitializationEndpointPrefix",
              ],
            },
            {
              "Fn::Select": [
                5,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::GetAtt": [
                        "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                        "Url",
                      ],
                    },
                  ],
                },
              ],
            },
            "/",
            {
              "Fn::Select": [
                6,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::GetAtt": [
                        "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                        "Url",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdDecisionServerApiGatewayLogGroup29E15A43": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/aws/apigateway/ads-logs-test",
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AdDecisionServerScheduleSCTEB15B2BD0": {
      "DependsOn": [
        "AdDecisionServerScheduleSCTEServiceRoleDefaultPolicy9B8CE710",
        "AdDecisionServerScheduleSCTEServiceRole8C244D42",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9ab12fee3e44fea4505a5dd1a05c057f17326b9e54741c7250e0e1515e33bc92.zip",
        },
        "Environment": {
          "Variables": {
            "CLEARANCE_RULE": "SEQUENCIAL",
            "CREATIVES": {
              "Fn::Join": [
                "",
                [
                  "[{"duration":30,"url":"https://",
                  {
                    "Fn::GetAtt": [
                      "FilePublisherDistribution877DC374",
                      "DomainName",
                    ],
                  },
                  "/30sec.mp4","delivery":"progressive","mimeType":"video/mp4","width":1280,"height":720},{"duration":15,"url":"https://",
                  {
                    "Fn::GetAtt": [
                      "FilePublisherDistribution877DC374",
                      "DomainName",
                    ],
                  },
                  "/15sec.mp4","delivery":"progressive","mimeType":"video/mp4","width":1280,"height":720},{"duration":60,"url":"https://",
                  {
                    "Fn::GetAtt": [
                      "FilePublisherDistribution877DC374",
                      "DomainName",
                    ],
                  },
                  "/60sec.mp4","delivery":"progressive","mimeType":"video/mp4","width":1280,"height":720}]",
                ],
              ],
            },
            "NODE_ENV": "test",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AdDecisionServerScheduleSCTEServiceRole8C244D42",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AdDecisionServerScheduleSCTELogRetentionBD399FF4": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AdDecisionServerScheduleSCTEB15B2BD0",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AdDecisionServerScheduleSCTEServiceRole8C244D42": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdDecisionServerScheduleSCTEServiceRoleDefaultPolicy9B8CE710": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "medialive:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AdDecisionServerScheduleSCTEServiceRoleDefaultPolicy9B8CE710",
        "Roles": [
          {
            "Ref": "AdDecisionServerScheduleSCTEServiceRole8C244D42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AdDecisionServerVASTEndpoint304968C7": {
      "Properties": {
        "BinaryMediaTypes": [
          "application/xml",
        ],
        "Name": "VAST-Endpoint",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "AdDecisionServerVASTEndpointAccount5B709F22": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AdDecisionServerVASTEndpoint304968C7",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "AdDecisionServerVASTEndpointCloudWatchRoleE6BA65AA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Delete",
    },
    "AdDecisionServerVASTEndpointCloudWatchRoleE6BA65AA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Delete",
    },
    "AdDecisionServerVASTEndpointDeployment57E301FAfdf222e6c6112a3779eb3443dec47ad5": {
      "DependsOn": [
        "AdDecisionServerVASTEndpointvastGET7D1E957D",
        "AdDecisionServerVASTEndpointvast753ADAA5",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "AdDecisionServerVASTEndpoint304968C7",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "AdDecisionServerVASTEndpointDeploymentStageprod0E51DA90": {
      "DependsOn": [
        "AdDecisionServerVASTEndpointAccount5B709F22",
      ],
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "AdDecisionServerApiGatewayLogGroup29E15A43",
              "Arn",
            ],
          },
          "Format": "{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","user":"$context.identity.user","caller":"$context.identity.caller","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}",
        },
        "DeploymentId": {
          "Ref": "AdDecisionServerVASTEndpointDeployment57E301FAfdf222e6c6112a3779eb3443dec47ad5",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "AdDecisionServerVASTEndpoint304968C7",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "AdDecisionServerVASTEndpointvast753ADAA5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "AdDecisionServerVASTEndpoint304968C7",
            "RootResourceId",
          ],
        },
        "PathPart": "vast",
        "RestApiId": {
          "Ref": "AdDecisionServerVASTEndpoint304968C7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "AdDecisionServerVASTEndpointvastGET7D1E957D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Content-Type": "'application/xml'",
              },
              "ResponseTemplates": {
                "application/xml": "#set($inputRoot = $input.path('$'))$inputRoot.body",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{"duration": "$input.params('duration')"}",
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AdDecisionServerScheduleSCTEB15B2BD0",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": {
          "method.request.querystring.duration": true,
        },
        "ResourceId": {
          "Ref": "AdDecisionServerVASTEndpointvast753ADAA5",
        },
        "RestApiId": {
          "Ref": "AdDecisionServerVASTEndpoint304968C7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "AdDecisionServerVASTEndpointvastGETApiPermissionTesttestAdDecisionServerVASTEndpoint8A3B887DGETvastB0EF4B75": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AdDecisionServerScheduleSCTEB15B2BD0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "AdDecisionServerVASTEndpoint304968C7",
              },
              "/test-invoke-stage/GET/vast",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AdDecisionServerVASTEndpointvastGETApiPermissiontestAdDecisionServerVASTEndpoint8A3B887DGETvast14FB8D83": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AdDecisionServerScheduleSCTEB15B2BD0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "AdDecisionServerVASTEndpoint304968C7",
              },
              "/",
              {
                "Ref": "AdDecisionServerVASTEndpointDeploymentStageprod0E51DA90",
              },
              "/GET/vast",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AdDecisionServerrole07B3EFD3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchLogsFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdDecisionServerroleDefaultPolicy69A6098E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AdDecisionServerApiGatewayLogGroup29E15A43",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AdDecisionServerroleDefaultPolicy69A6098E",
        "Roles": [
          {
            "Ref": "AdDecisionServerrole07B3EFD3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomResource57FD4BB5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AwsCustomResourceCustomResourcePolicyC0817817",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"MediaTailor","action":"PutPlaybackConfiguration","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","parameters":{"Name":"a4b367f7-8ea6-4990-9a35-882f69d0768e","VideoContentSourceUrl":"",
              {
                "Fn::GetAtt": [
                  "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                  "Url",
                ],
              },
              "","AdDecisionServerUrl":"https://",
              {
                "Ref": "AdDecisionServerVASTEndpoint304968C7",
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AdDecisionServerVASTEndpointDeploymentStageprod0E51DA90",
              },
              "/vast?duration=[session.avail_duration_secs]","SlateAdUrl":"https://",
              {
                "Fn::GetAtt": [
                  "FilePublisherDistribution877DC374",
                  "DomainName",
                ],
              },
              "/slate-1sec.mp4","CdnConfiguration":{"AdSegmentUrlPrefix":"[player_params.cdn]","ContentSegmentUrlPrefix":"[player_params.cdn]/out/v1"},"ConfigurationAliases":{"player_params.cdn":{"primary":"https://",
              {
                "Fn::GetAtt": [
                  "CDN1Distribution0E61DF5B",
                  "DomainName",
                ],
              },
              "","secondary":"https://",
              {
                "Fn::GetAtt": [
                  "CDN2Distribution1B3C1BBE",
                  "DomainName",
                ],
              },
              ""}}},"physicalResourceId":{"id":"b410d798-5f09-440f-bd91-37ea26273b21"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AwsCustomResourceCustomResourcePolicyC0817817": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "mediatailor:PutPlaybackConfiguration",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomResourceCustomResourcePolicyC0817817",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CDN1Distribution0E61DF5B": {
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/m*",
              "TargetOriginId": "testCDN1DistributionOrigin23D6A8515",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/dash/*",
              "TargetOriginId": "testCDN1DistributionOrigin23D6A8515",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/tm/*",
              "TargetOriginId": "testCDN1DistributionOrigin3611DEE87",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/segment/*",
              "TargetOriginId": "testCDN1DistributionOrigin23D6A8515",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::StackName",
                },
                " - CloudFront distribution for MediaTailor",
              ],
            ],
          },
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
            "Compress": true,
            "TargetOriginId": "testCDN1DistributionOrigin1FDEE84CC",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                          "Url",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN1DistributionOrigin1FDEE84CC",
            },
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "MediaTailorWithCloudFrontMediaTailorCfnPlaybackConfiguration77F4E5D7",
                          "HlsConfiguration.ManifestEndpointPrefix",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN1DistributionOrigin23D6A8515",
            },
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                          "Url",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN1DistributionOrigin3611DEE87",
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "CDN2Distribution1B3C1BBE": {
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/m*",
              "TargetOriginId": "testCDN2DistributionOrigin2E21C6399",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/dash/*",
              "TargetOriginId": "testCDN2DistributionOrigin2E21C6399",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/tm/*",
              "TargetOriginId": "testCDN2DistributionOrigin32CF7153B",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
              "Compress": true,
              "OriginRequestPolicyId": "775133bc-15f2-49f9-abea-afb2e0bf67d2",
              "PathPattern": "/v1/segment/*",
              "TargetOriginId": "testCDN2DistributionOrigin2E21C6399",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::StackName",
                },
                " - CloudFront distribution for MediaTailor",
              ],
            ],
          },
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "08627262-05a9-4f76-9ded-b50ca2e3a84f",
            "Compress": true,
            "TargetOriginId": "testCDN2DistributionOrigin1892207E3",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                          "Url",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN2DistributionOrigin1892207E3",
            },
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "MediaTailorWithCloudFrontMediaTailorCfnPlaybackConfiguration77F4E5D7",
                          "HlsConfiguration.ManifestEndpointPrefix",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN2DistributionOrigin2E21C6399",
            },
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "SSLv3",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                          "Url",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "testCDN2DistributionOrigin32CF7153B",
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "FilePublisherDeployFilesAwsCliLayerEC320A13",
          },
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FilePublisherDeployFilesAwsCliLayerEC320A13": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "FilePublisherDeployFilesCustomResource1024MiBA8F9BCD4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "befa0fe836837bc26de9fa85d3df5a0d0d8c88dc5654f4574adfbed0e874fbbf.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "FilePublisherDistribution877DC374": {
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "Compress": true,
            "TargetOriginId": "testFilePublisherDistributionOrigin15DC92E3A",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                  "RegionalDomainName",
                ],
              },
              "Id": "testFilePublisherDistributionOrigin15DC92E3A",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "FilePublisherOAI87FC8EA5",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FilePublisherOAI87FC8EA5": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OAI for CloudFront to access private S3 bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "ff8c89f7-c6aa-42ea-b821-2acb7f38e917",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:fc2f7067",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FilePublisherff8c89f7c6aa42eab8212acb7f38e917AutoDeleteObjectsCustomResource7700D585": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FilePublisherff8c89f7c6aa42eab8212acb7f38e917Policy57229755",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FilePublisherff8c89f7c6aa42eab8212acb7f38e917Policy57229755": {
      "Properties": {
        "Bucket": {
          "Ref": "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "FilePublisherOAI87FC8EA5",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FilePublisherff8c89f7c6aa42eab8212acb7f38e917540D1EF3",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "LiveChannelFromMp4MediaLiveCfnChannelChannel2738FC17": {
      "Properties": {
        "ChannelClass": "SINGLE_PIPELINE",
        "Destinations": [
          {
            "Id": "MediaPackageV1",
            "MediaPackageSettings": [
              {
                "ChannelId": {
                  "Ref": "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2",
                },
              },
            ],
          },
        ],
        "EncoderSettings": {
          "AudioDescriptions": [
            {
              "AudioSelectorName": "default",
              "AudioTypeControl": "FOLLOW_INPUT",
              "CodecSettings": {
                "AacSettings": {
                  "Bitrate": 96000,
                  "CodingMode": "CODING_MODE_2_0",
                  "SampleRate": 48000,
                },
              },
              "LanguageCodeControl": "FOLLOW_INPUT",
              "Name": "_96Kbps_AAC",
            },
          ],
          "AvailBlanking": {
            "State": "ENABLED",
          },
          "OutputGroups": [
            {
              "Name": "outputGroup_0",
              "OutputGroupSettings": {
                "MediaPackageGroupSettings": {
                  "Destination": {
                    "DestinationRefId": "MediaPackageV1",
                  },
                },
              },
              "Outputs": [
                {
                  "OutputName": "outputGroup_0_640x360",
                  "OutputSettings": {
                    "MediaPackageOutputSettings": {},
                  },
                  "VideoDescriptionName": "_640x360",
                },
                {
                  "OutputName": "outputGroup_0_960x540",
                  "OutputSettings": {
                    "MediaPackageOutputSettings": {},
                  },
                  "VideoDescriptionName": "_960x540",
                },
                {
                  "OutputName": "outputGroup_0_1280x720",
                  "OutputSettings": {
                    "MediaPackageOutputSettings": {},
                  },
                  "VideoDescriptionName": "_1280x720",
                },
                {
                  "AudioDescriptionNames": [
                    "_96Kbps_AAC",
                  ],
                  "OutputName": "outputGroup_0_96Kbps_AAC",
                  "OutputSettings": {
                    "MediaPackageOutputSettings": {},
                  },
                },
              ],
            },
          ],
          "TimecodeConfig": {
            "Source": "SYSTEMCLOCK",
          },
          "VideoDescriptions": [
            {
              "CodecSettings": {
                "H264Settings": {
                  "FramerateControl": "SPECIFIED",
                  "FramerateDenominator": 1001,
                  "FramerateNumerator": 30000,
                  "GopSize": 3,
                  "GopSizeUnits": "SECONDS",
                  "MaxBitrate": 1000000,
                  "ParControl": "SPECIFIED",
                  "ParDenominator": 1,
                  "ParNumerator": 1,
                  "RateControlMode": "QVBR",
                  "ScanType": "PROGRESSIVE",
                  "TimecodeBurninSettings": {
                    "FontSize": "SMALL_16",
                    "Position": "TOP_CENTER",
                    "Prefix": "Ch1_640x360",
                  },
                  "TimecodeInsertion": "PIC_TIMING_SEI",
                },
              },
              "Height": 360,
              "Name": "_640x360",
              "Width": 640,
            },
            {
              "CodecSettings": {
                "H264Settings": {
                  "FramerateControl": "SPECIFIED",
                  "FramerateDenominator": 1001,
                  "FramerateNumerator": 30000,
                  "GopSize": 3,
                  "GopSizeUnits": "SECONDS",
                  "MaxBitrate": 2000000,
                  "ParControl": "SPECIFIED",
                  "ParDenominator": 1,
                  "ParNumerator": 1,
                  "RateControlMode": "QVBR",
                  "ScanType": "PROGRESSIVE",
                  "TimecodeBurninSettings": {
                    "FontSize": "SMALL_16",
                    "Position": "TOP_CENTER",
                    "Prefix": "Ch1_960x540",
                  },
                  "TimecodeInsertion": "PIC_TIMING_SEI",
                },
              },
              "Height": 540,
              "Name": "_960x540",
              "Width": 960,
            },
            {
              "CodecSettings": {
                "H264Settings": {
                  "FramerateControl": "SPECIFIED",
                  "FramerateDenominator": 1001,
                  "FramerateNumerator": 30000,
                  "GopSize": 3,
                  "GopSizeUnits": "SECONDS",
                  "MaxBitrate": 3000000,
                  "ParControl": "SPECIFIED",
                  "ParDenominator": 1,
                  "ParNumerator": 1,
                  "RateControlMode": "QVBR",
                  "ScanType": "PROGRESSIVE",
                  "TimecodeBurninSettings": {
                    "FontSize": "SMALL_16",
                    "Position": "TOP_CENTER",
                    "Prefix": "Ch1_1280x720",
                  },
                  "TimecodeInsertion": "PIC_TIMING_SEI",
                },
              },
              "Height": 720,
              "Name": "_1280x720",
              "Width": 1280,
            },
          ],
        },
        "InputAttachments": [
          {
            "InputAttachmentName": "9c4ea138-ff4e-4dfb-8722-2e7da007d281",
            "InputId": {
              "Ref": "LiveChannelFromMp4MediaLiveCfnInput0330A3853",
            },
            "InputSettings": {
              "SourceEndBehavior": "LOOP",
            },
          },
        ],
        "Name": "31ed108e-9991-4730-9733-b64ca9b8c60b-Channel",
        "RoleArn": {
          "Fn::GetAtt": [
            "LiveChannelFromMp4MediaLiveIamRoleChannel570F95D7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::MediaLive::Channel",
    },
    "LiveChannelFromMp4MediaLiveCfnInput0330A3853": {
      "Properties": {
        "Name": "9c4ea138-ff4e-4dfb-8722-2e7da007d281",
        "Sources": [
          {
            "Url": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "FilePublisherDistribution877DC374",
                      "DomainName",
                    ],
                  },
                  "/dog.mp4",
                ],
              ],
            },
          },
        ],
        "Type": "MP4_FILE",
      },
      "Type": "AWS::MediaLive::Input",
    },
    "LiveChannelFromMp4MediaLiveIamRoleChannel570F95D7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "medialive.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "mediapackage:DescribeChannel",
                    "mediapackagev2:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2": {
      "Properties": {
        "Description": "MediaPackage channel for testing",
        "Id": "8ce0f4f5-7e62-43e3-baa4-e0a257429e95",
      },
      "Type": "AWS::MediaPackage::Channel",
    },
    "LiveChannelFromMp4MediaPackageV1MediaPackageV1CmafEndpoint55053296": {
      "Properties": {
        "ChannelId": {
          "Ref": "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2",
        },
        "CmafPackage": {
          "HlsManifests": [
            {
              "AdMarkers": "DATERANGE",
              "AdTriggers": [
                "DISTRIBUTOR_ADVERTISEMENT",
                "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
                "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
                "PROVIDER_ADVERTISEMENT",
                "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
                "PROVIDER_PLACEMENT_OPPORTUNITY",
                "SPLICE_INSERT",
              ],
              "Id": "1",
              "PlaylistWindowSeconds": 60,
              "ProgramDateTimeIntervalSeconds": 1,
            },
          ],
          "SegmentDurationSeconds": 6,
        },
        "Description": "MediaPackage CMAF endpoint for testing",
        "Id": "197e7e59-0092-4a45-bf22-cde350619f10",
        "StartoverWindowSeconds": 300,
      },
      "Type": "AWS::MediaPackage::OriginEndpoint",
    },
    "LiveChannelFromMp4MediaPackageV1MediaPackageV1DashEndpointBA61A791": {
      "Properties": {
        "ChannelId": {
          "Ref": "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2",
        },
        "DashPackage": {
          "AdTriggers": [
            "DISTRIBUTOR_ADVERTISEMENT",
            "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
            "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
            "PROVIDER_ADVERTISEMENT",
            "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
            "PROVIDER_PLACEMENT_OPPORTUNITY",
            "SPLICE_INSERT",
          ],
          "ManifestWindowSeconds": 60,
          "PeriodTriggers": [
            "ADS",
          ],
          "SegmentDurationSeconds": 6,
        },
        "Description": "MediaPackage DASH endpoint for testing",
        "Id": "fa7c1a86-d5e4-4f33-ab29-5108c58d8a0f",
        "StartoverWindowSeconds": 300,
      },
      "Type": "AWS::MediaPackage::OriginEndpoint",
    },
    "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2": {
      "Properties": {
        "ChannelId": {
          "Ref": "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2",
        },
        "Description": "MediaPackage HLS endpoint for testing",
        "HlsPackage": {
          "AdMarkers": "DATERANGE",
          "AdTriggers": [
            "DISTRIBUTOR_ADVERTISEMENT",
            "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
            "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
            "PROVIDER_ADVERTISEMENT",
            "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
            "PROVIDER_PLACEMENT_OPPORTUNITY",
            "SPLICE_INSERT",
          ],
          "PlaylistWindowSeconds": 60,
          "ProgramDateTimeIntervalSeconds": 1,
          "SegmentDurationSeconds": 6,
          "UseAudioRenditionGroup": false,
        },
        "Id": "93b4b190-daee-4e1a-bf40-6c722889c75e",
        "StartoverWindowSeconds": 300,
      },
      "Type": "AWS::MediaPackage::OriginEndpoint",
    },
    "LiveChannelFromMp4MediaPackageV1MediaPackageV1MssEndpoint7AC0060D": {
      "Properties": {
        "ChannelId": {
          "Ref": "LiveChannelFromMp4MediaPackageV1MediaPackageV1Channel8413A6B2",
        },
        "Description": "MediaPackage MSS endpoint for testing",
        "Id": "8188410c-7a35-4d1d-a06c-d621740cf8ab",
        "MssPackage": {
          "ManifestWindowSeconds": 60,
          "SegmentDurationSeconds": 6,
        },
        "StartoverWindowSeconds": 300,
      },
      "Type": "AWS::MediaPackage::OriginEndpoint",
    },
    "LiveChannelFromMp4StartMediaLiveChannel50E51653": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "LiveChannelFromMp4StartMediaLiveChannelCustomResourcePolicy0208E3D5",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"MediaLive","action":"StartChannel","parameters":{"ChannelId":"",
              {
                "Ref": "LiveChannelFromMp4MediaLiveCfnChannelChannel2738FC17",
              },
              ""},"physicalResourceId":{"id":"1069fade-8f24-49fb-af1f-a2c5a3f8663d"},"ignoreErrorCodesMatching":"*","outputPaths":["Id","Arn"]}",
            ],
          ],
        },
        "Delete": {
          "Fn::Join": [
            "",
            [
              "{"service":"MediaLive","action":"StopChannel","parameters":{"ChannelId":"",
              {
                "Ref": "LiveChannelFromMp4MediaLiveCfnChannelChannel2738FC17",
              },
              ""},"physicalResourceId":{"id":"87a650f1-6536-44e6-b043-b3400b15e257"},"ignoreErrorCodesMatching":"*","outputPaths":["Id","Arn"]}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "LiveChannelFromMp4StartMediaLiveChannelCustomResourcePolicy0208E3D5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "medialive:StartChannel",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "medialive:StopChannel",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LiveChannelFromMp4StartMediaLiveChannelCustomResourcePolicy0208E3D5",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MediaTailorWithCloudFrontMediaTailorCfnPlaybackConfiguration77F4E5D7": {
      "Properties": {
        "AdDecisionServerUrl": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "AdDecisionServerVASTEndpoint304968C7",
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AdDecisionServerVASTEndpointDeploymentStageprod0E51DA90",
              },
              "/vast?duration=[session.avail_duration_secs]",
            ],
          ],
        },
        "LivePreRollConfiguration": {},
        "Name": "a4b367f7-8ea6-4990-9a35-882f69d0768e",
        "SlateAdUrl": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Fn::GetAtt": [
                  "FilePublisherDistribution877DC374",
                  "DomainName",
                ],
              },
              "/slate-1sec.mp4",
            ],
          ],
        },
        "VideoContentSourceUrl": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "//",
                              {
                                "Fn::GetAtt": [
                                  "LiveChannelFromMp4MediaPackageV1MediaPackageV1HlsEndpoint735161B2",
                                  "Url",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "/out/v1/",
            ],
          ],
        },
      },
      "Type": "AWS::MediaTailor::PlaybackConfiguration",
    },
    "ScteScheduler1EventBridgeScheduleInvokeFunctionEveryXMinutesAllowEventRuletestScteScheduler1ScheduleSCTE84D8BCEA18B6E902": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ScteScheduler1ScheduleSCTEA3D6732C",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScteScheduler1EventBridgeScheduleInvokeFunctionEveryXMinutesEA306CB6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScteScheduler1EventBridgeScheduleInvokeFunctionEveryXMinutesEA306CB6": {
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScteScheduler1ScheduleSCTEA3D6732C",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScteScheduler1ScheduleSCTEA3D6732C": {
      "DependsOn": [
        "ScteScheduler1ScheduleSCTEServiceRoleDefaultPolicy7B35C517",
        "ScteScheduler1ScheduleSCTEServiceRoleFEDBF86E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1d2d211f8159dc6cdf1fdd7d09705d12a467948a55195a93f8963b7afddc3308.zip",
        },
        "Environment": {
          "Variables": {
            "AVAIL_LENGTH": "30",
            "CHANNEL_ID": {
              "Ref": "LiveChannelFromMp4MediaLiveCfnChannelChannel2738FC17",
            },
            "NODE_ENV": "test",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ScteScheduler1ScheduleSCTEServiceRoleFEDBF86E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScteScheduler1ScheduleSCTELogRetentionF36077F9": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ScteScheduler1ScheduleSCTEA3D6732C",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ScteScheduler1ScheduleSCTEServiceRoleDefaultPolicy7B35C517": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "medialive:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScteScheduler1ScheduleSCTEServiceRoleDefaultPolicy7B35C517",
        "Roles": [
          {
            "Ref": "ScteScheduler1ScheduleSCTEServiceRoleFEDBF86E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScteScheduler1ScheduleSCTEServiceRoleFEDBF86E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
